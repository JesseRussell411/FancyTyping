//This code was generated by .\AnyGenerate.py
using System;
using System.Collections.Generic;
using System.Collections.Immutable;
namespace JesseRussell.FancyTyping
{
    public struct Any<T1> : IAny
    {
        public static implicit operator Any<T1>(T1 t1) => new Any<T1>((object)t1);
        public static explicit operator T1(Any<T1>self) => (T1)self.Value;
        public Any(Any<T1> value) => Value = value.Value;
        /// <summary>
        /// The value stored in the current Any type.
        /// </summary>
        public readonly dynamic Value;
        private Any(dynamic value) => Value = value;
        public override string ToString() => Value.ToString();
        public override bool Equals(object obj) => Value.Equals(obj);
        public override int GetHashCode() => Value.GetHashCode();
        /// <summary>
        /// The type of the value stored in the current Any type.
        /// </summary>
        public Type Type => Value.GetType();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public static readonly IEnumerable<Type> whiteList = new TypeArray<T1>();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public IEnumerable<Type> WhiteList => whiteList;
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public static readonly ImmutableHashSet<Type> whiteSet = new HashSet<Type>(whiteList).ToImmutableHashSet();
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public ImmutableHashSet<Type> WhiteSet => whiteSet;
        public static bool operator ==(Any<T1> left, Any<T1> right) => left.Value.Equals(right.Value);
        public static bool operator !=(Any<T1> left, Any<T1> right) => !left.Value.Equals(right.Value);
    }
    public struct Any<T1, T2> : IAny
    {
        public static implicit operator Any<T1, T2>(T1 t1) => new Any<T1, T2>((object)t1);
        public static implicit operator Any<T1, T2>(T2 t2) => new Any<T1, T2>((object)t2);
        public static explicit operator T1(Any<T1, T2>self) => (T1)self.Value;
        public static explicit operator T2(Any<T1, T2>self) => (T2)self.Value;
        public Any(Any<T1, T2> value) => Value = value.Value;
        /// <summary>
        /// The value stored in the current Any type.
        /// </summary>
        public readonly dynamic Value;
        private Any(dynamic value) => Value = value;
        public override string ToString() => Value.ToString();
        public override bool Equals(object obj) => Value.Equals(obj);
        public override int GetHashCode() => Value.GetHashCode();
        /// <summary>
        /// The type of the value stored in the current Any type.
        /// </summary>
        public Type Type => Value.GetType();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public static readonly IEnumerable<Type> whiteList = new TypeArray<T1, T2>();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public IEnumerable<Type> WhiteList => whiteList;
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public static readonly ImmutableHashSet<Type> whiteSet = new HashSet<Type>(whiteList).ToImmutableHashSet();
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public ImmutableHashSet<Type> WhiteSet => whiteSet;
        public static bool operator ==(Any<T1, T2> left, Any<T1, T2> right) => left.Value.Equals(right.Value);
        public static bool operator !=(Any<T1, T2> left, Any<T1, T2> right) => !left.Value.Equals(right.Value);
    }
    public struct Any<T1, T2, T3> : IAny
    {
        public static implicit operator Any<T1, T2, T3>(T1 t1) => new Any<T1, T2, T3>((object)t1);
        public static implicit operator Any<T1, T2, T3>(T2 t2) => new Any<T1, T2, T3>((object)t2);
        public static implicit operator Any<T1, T2, T3>(T3 t3) => new Any<T1, T2, T3>((object)t3);
        public static explicit operator T1(Any<T1, T2, T3>self) => (T1)self.Value;
        public static explicit operator T2(Any<T1, T2, T3>self) => (T2)self.Value;
        public static explicit operator T3(Any<T1, T2, T3>self) => (T3)self.Value;
        public Any(Any<T1, T2, T3> value) => Value = value.Value;
        /// <summary>
        /// The value stored in the current Any type.
        /// </summary>
        public readonly dynamic Value;
        private Any(dynamic value) => Value = value;
        public override string ToString() => Value.ToString();
        public override bool Equals(object obj) => Value.Equals(obj);
        public override int GetHashCode() => Value.GetHashCode();
        /// <summary>
        /// The type of the value stored in the current Any type.
        /// </summary>
        public Type Type => Value.GetType();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public static readonly IEnumerable<Type> whiteList = new TypeArray<T1, T2, T3>();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public IEnumerable<Type> WhiteList => whiteList;
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public static readonly ImmutableHashSet<Type> whiteSet = new HashSet<Type>(whiteList).ToImmutableHashSet();
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public ImmutableHashSet<Type> WhiteSet => whiteSet;
        public static bool operator ==(Any<T1, T2, T3> left, Any<T1, T2, T3> right) => left.Value.Equals(right.Value);
        public static bool operator !=(Any<T1, T2, T3> left, Any<T1, T2, T3> right) => !left.Value.Equals(right.Value);
    }
    public struct Any<T1, T2, T3, T4> : IAny
    {
        public static implicit operator Any<T1, T2, T3, T4>(T1 t1) => new Any<T1, T2, T3, T4>((object)t1);
        public static implicit operator Any<T1, T2, T3, T4>(T2 t2) => new Any<T1, T2, T3, T4>((object)t2);
        public static implicit operator Any<T1, T2, T3, T4>(T3 t3) => new Any<T1, T2, T3, T4>((object)t3);
        public static implicit operator Any<T1, T2, T3, T4>(T4 t4) => new Any<T1, T2, T3, T4>((object)t4);
        public static explicit operator T1(Any<T1, T2, T3, T4>self) => (T1)self.Value;
        public static explicit operator T2(Any<T1, T2, T3, T4>self) => (T2)self.Value;
        public static explicit operator T3(Any<T1, T2, T3, T4>self) => (T3)self.Value;
        public static explicit operator T4(Any<T1, T2, T3, T4>self) => (T4)self.Value;
        public Any(Any<T1, T2, T3, T4> value) => Value = value.Value;
        /// <summary>
        /// The value stored in the current Any type.
        /// </summary>
        public readonly dynamic Value;
        private Any(dynamic value) => Value = value;
        public override string ToString() => Value.ToString();
        public override bool Equals(object obj) => Value.Equals(obj);
        public override int GetHashCode() => Value.GetHashCode();
        /// <summary>
        /// The type of the value stored in the current Any type.
        /// </summary>
        public Type Type => Value.GetType();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public static readonly IEnumerable<Type> whiteList = new TypeArray<T1, T2, T3, T4>();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public IEnumerable<Type> WhiteList => whiteList;
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public static readonly ImmutableHashSet<Type> whiteSet = new HashSet<Type>(whiteList).ToImmutableHashSet();
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public ImmutableHashSet<Type> WhiteSet => whiteSet;
        public static bool operator ==(Any<T1, T2, T3, T4> left, Any<T1, T2, T3, T4> right) => left.Value.Equals(right.Value);
        public static bool operator !=(Any<T1, T2, T3, T4> left, Any<T1, T2, T3, T4> right) => !left.Value.Equals(right.Value);
    }
    public struct Any<T1, T2, T3, T4, T5> : IAny
    {
        public static implicit operator Any<T1, T2, T3, T4, T5>(T1 t1) => new Any<T1, T2, T3, T4, T5>((object)t1);
        public static implicit operator Any<T1, T2, T3, T4, T5>(T2 t2) => new Any<T1, T2, T3, T4, T5>((object)t2);
        public static implicit operator Any<T1, T2, T3, T4, T5>(T3 t3) => new Any<T1, T2, T3, T4, T5>((object)t3);
        public static implicit operator Any<T1, T2, T3, T4, T5>(T4 t4) => new Any<T1, T2, T3, T4, T5>((object)t4);
        public static implicit operator Any<T1, T2, T3, T4, T5>(T5 t5) => new Any<T1, T2, T3, T4, T5>((object)t5);
        public static explicit operator T1(Any<T1, T2, T3, T4, T5>self) => (T1)self.Value;
        public static explicit operator T2(Any<T1, T2, T3, T4, T5>self) => (T2)self.Value;
        public static explicit operator T3(Any<T1, T2, T3, T4, T5>self) => (T3)self.Value;
        public static explicit operator T4(Any<T1, T2, T3, T4, T5>self) => (T4)self.Value;
        public static explicit operator T5(Any<T1, T2, T3, T4, T5>self) => (T5)self.Value;
        public Any(Any<T1, T2, T3, T4, T5> value) => Value = value.Value;
        /// <summary>
        /// The value stored in the current Any type.
        /// </summary>
        public readonly dynamic Value;
        private Any(dynamic value) => Value = value;
        public override string ToString() => Value.ToString();
        public override bool Equals(object obj) => Value.Equals(obj);
        public override int GetHashCode() => Value.GetHashCode();
        /// <summary>
        /// The type of the value stored in the current Any type.
        /// </summary>
        public Type Type => Value.GetType();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public static readonly IEnumerable<Type> whiteList = new TypeArray<T1, T2, T3, T4, T5>();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public IEnumerable<Type> WhiteList => whiteList;
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public static readonly ImmutableHashSet<Type> whiteSet = new HashSet<Type>(whiteList).ToImmutableHashSet();
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public ImmutableHashSet<Type> WhiteSet => whiteSet;
        public static bool operator ==(Any<T1, T2, T3, T4, T5> left, Any<T1, T2, T3, T4, T5> right) => left.Value.Equals(right.Value);
        public static bool operator !=(Any<T1, T2, T3, T4, T5> left, Any<T1, T2, T3, T4, T5> right) => !left.Value.Equals(right.Value);
    }
    public struct Any<T1, T2, T3, T4, T5, T6> : IAny
    {
        public static implicit operator Any<T1, T2, T3, T4, T5, T6>(T1 t1) => new Any<T1, T2, T3, T4, T5, T6>((object)t1);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6>(T2 t2) => new Any<T1, T2, T3, T4, T5, T6>((object)t2);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6>(T3 t3) => new Any<T1, T2, T3, T4, T5, T6>((object)t3);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6>(T4 t4) => new Any<T1, T2, T3, T4, T5, T6>((object)t4);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6>(T5 t5) => new Any<T1, T2, T3, T4, T5, T6>((object)t5);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6>(T6 t6) => new Any<T1, T2, T3, T4, T5, T6>((object)t6);
        public static explicit operator T1(Any<T1, T2, T3, T4, T5, T6>self) => (T1)self.Value;
        public static explicit operator T2(Any<T1, T2, T3, T4, T5, T6>self) => (T2)self.Value;
        public static explicit operator T3(Any<T1, T2, T3, T4, T5, T6>self) => (T3)self.Value;
        public static explicit operator T4(Any<T1, T2, T3, T4, T5, T6>self) => (T4)self.Value;
        public static explicit operator T5(Any<T1, T2, T3, T4, T5, T6>self) => (T5)self.Value;
        public static explicit operator T6(Any<T1, T2, T3, T4, T5, T6>self) => (T6)self.Value;
        public Any(Any<T1, T2, T3, T4, T5, T6> value) => Value = value.Value;
        /// <summary>
        /// The value stored in the current Any type.
        /// </summary>
        public readonly dynamic Value;
        private Any(dynamic value) => Value = value;
        public override string ToString() => Value.ToString();
        public override bool Equals(object obj) => Value.Equals(obj);
        public override int GetHashCode() => Value.GetHashCode();
        /// <summary>
        /// The type of the value stored in the current Any type.
        /// </summary>
        public Type Type => Value.GetType();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public static readonly IEnumerable<Type> whiteList = new TypeArray<T1, T2, T3, T4, T5, T6>();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public IEnumerable<Type> WhiteList => whiteList;
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public static readonly ImmutableHashSet<Type> whiteSet = new HashSet<Type>(whiteList).ToImmutableHashSet();
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public ImmutableHashSet<Type> WhiteSet => whiteSet;
        public static bool operator ==(Any<T1, T2, T3, T4, T5, T6> left, Any<T1, T2, T3, T4, T5, T6> right) => left.Value.Equals(right.Value);
        public static bool operator !=(Any<T1, T2, T3, T4, T5, T6> left, Any<T1, T2, T3, T4, T5, T6> right) => !left.Value.Equals(right.Value);
    }
    public struct Any<T1, T2, T3, T4, T5, T6, T7> : IAny
    {
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7>(T1 t1) => new Any<T1, T2, T3, T4, T5, T6, T7>((object)t1);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7>(T2 t2) => new Any<T1, T2, T3, T4, T5, T6, T7>((object)t2);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7>(T3 t3) => new Any<T1, T2, T3, T4, T5, T6, T7>((object)t3);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7>(T4 t4) => new Any<T1, T2, T3, T4, T5, T6, T7>((object)t4);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7>(T5 t5) => new Any<T1, T2, T3, T4, T5, T6, T7>((object)t5);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7>(T6 t6) => new Any<T1, T2, T3, T4, T5, T6, T7>((object)t6);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7>(T7 t7) => new Any<T1, T2, T3, T4, T5, T6, T7>((object)t7);
        public static explicit operator T1(Any<T1, T2, T3, T4, T5, T6, T7>self) => (T1)self.Value;
        public static explicit operator T2(Any<T1, T2, T3, T4, T5, T6, T7>self) => (T2)self.Value;
        public static explicit operator T3(Any<T1, T2, T3, T4, T5, T6, T7>self) => (T3)self.Value;
        public static explicit operator T4(Any<T1, T2, T3, T4, T5, T6, T7>self) => (T4)self.Value;
        public static explicit operator T5(Any<T1, T2, T3, T4, T5, T6, T7>self) => (T5)self.Value;
        public static explicit operator T6(Any<T1, T2, T3, T4, T5, T6, T7>self) => (T6)self.Value;
        public static explicit operator T7(Any<T1, T2, T3, T4, T5, T6, T7>self) => (T7)self.Value;
        public Any(Any<T1, T2, T3, T4, T5, T6, T7> value) => Value = value.Value;
        /// <summary>
        /// The value stored in the current Any type.
        /// </summary>
        public readonly dynamic Value;
        private Any(dynamic value) => Value = value;
        public override string ToString() => Value.ToString();
        public override bool Equals(object obj) => Value.Equals(obj);
        public override int GetHashCode() => Value.GetHashCode();
        /// <summary>
        /// The type of the value stored in the current Any type.
        /// </summary>
        public Type Type => Value.GetType();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public static readonly IEnumerable<Type> whiteList = new TypeArray<T1, T2, T3, T4, T5, T6, T7>();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public IEnumerable<Type> WhiteList => whiteList;
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public static readonly ImmutableHashSet<Type> whiteSet = new HashSet<Type>(whiteList).ToImmutableHashSet();
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public ImmutableHashSet<Type> WhiteSet => whiteSet;
        public static bool operator ==(Any<T1, T2, T3, T4, T5, T6, T7> left, Any<T1, T2, T3, T4, T5, T6, T7> right) => left.Value.Equals(right.Value);
        public static bool operator !=(Any<T1, T2, T3, T4, T5, T6, T7> left, Any<T1, T2, T3, T4, T5, T6, T7> right) => !left.Value.Equals(right.Value);
    }
    public struct Any<T1, T2, T3, T4, T5, T6, T7, T8> : IAny
    {
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8>(T1 t1) => new Any<T1, T2, T3, T4, T5, T6, T7, T8>((object)t1);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8>(T2 t2) => new Any<T1, T2, T3, T4, T5, T6, T7, T8>((object)t2);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8>(T3 t3) => new Any<T1, T2, T3, T4, T5, T6, T7, T8>((object)t3);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8>(T4 t4) => new Any<T1, T2, T3, T4, T5, T6, T7, T8>((object)t4);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8>(T5 t5) => new Any<T1, T2, T3, T4, T5, T6, T7, T8>((object)t5);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8>(T6 t6) => new Any<T1, T2, T3, T4, T5, T6, T7, T8>((object)t6);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8>(T7 t7) => new Any<T1, T2, T3, T4, T5, T6, T7, T8>((object)t7);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8>(T8 t8) => new Any<T1, T2, T3, T4, T5, T6, T7, T8>((object)t8);
        public static explicit operator T1(Any<T1, T2, T3, T4, T5, T6, T7, T8>self) => (T1)self.Value;
        public static explicit operator T2(Any<T1, T2, T3, T4, T5, T6, T7, T8>self) => (T2)self.Value;
        public static explicit operator T3(Any<T1, T2, T3, T4, T5, T6, T7, T8>self) => (T3)self.Value;
        public static explicit operator T4(Any<T1, T2, T3, T4, T5, T6, T7, T8>self) => (T4)self.Value;
        public static explicit operator T5(Any<T1, T2, T3, T4, T5, T6, T7, T8>self) => (T5)self.Value;
        public static explicit operator T6(Any<T1, T2, T3, T4, T5, T6, T7, T8>self) => (T6)self.Value;
        public static explicit operator T7(Any<T1, T2, T3, T4, T5, T6, T7, T8>self) => (T7)self.Value;
        public static explicit operator T8(Any<T1, T2, T3, T4, T5, T6, T7, T8>self) => (T8)self.Value;
        public Any(Any<T1, T2, T3, T4, T5, T6, T7, T8> value) => Value = value.Value;
        /// <summary>
        /// The value stored in the current Any type.
        /// </summary>
        public readonly dynamic Value;
        private Any(dynamic value) => Value = value;
        public override string ToString() => Value.ToString();
        public override bool Equals(object obj) => Value.Equals(obj);
        public override int GetHashCode() => Value.GetHashCode();
        /// <summary>
        /// The type of the value stored in the current Any type.
        /// </summary>
        public Type Type => Value.GetType();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public static readonly IEnumerable<Type> whiteList = new TypeArray<T1, T2, T3, T4, T5, T6, T7, T8>();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public IEnumerable<Type> WhiteList => whiteList;
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public static readonly ImmutableHashSet<Type> whiteSet = new HashSet<Type>(whiteList).ToImmutableHashSet();
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public ImmutableHashSet<Type> WhiteSet => whiteSet;
        public static bool operator ==(Any<T1, T2, T3, T4, T5, T6, T7, T8> left, Any<T1, T2, T3, T4, T5, T6, T7, T8> right) => left.Value.Equals(right.Value);
        public static bool operator !=(Any<T1, T2, T3, T4, T5, T6, T7, T8> left, Any<T1, T2, T3, T4, T5, T6, T7, T8> right) => !left.Value.Equals(right.Value);
    }
    public struct Any<T1, T2, T3, T4, T5, T6, T7, T8, T9> : IAny
    {
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9>(T1 t1) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9>((object)t1);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9>(T2 t2) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9>((object)t2);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9>(T3 t3) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9>((object)t3);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9>(T4 t4) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9>((object)t4);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9>(T5 t5) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9>((object)t5);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9>(T6 t6) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9>((object)t6);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9>(T7 t7) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9>((object)t7);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9>(T8 t8) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9>((object)t8);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9>(T9 t9) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9>((object)t9);
        public static explicit operator T1(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9>self) => (T1)self.Value;
        public static explicit operator T2(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9>self) => (T2)self.Value;
        public static explicit operator T3(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9>self) => (T3)self.Value;
        public static explicit operator T4(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9>self) => (T4)self.Value;
        public static explicit operator T5(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9>self) => (T5)self.Value;
        public static explicit operator T6(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9>self) => (T6)self.Value;
        public static explicit operator T7(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9>self) => (T7)self.Value;
        public static explicit operator T8(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9>self) => (T8)self.Value;
        public static explicit operator T9(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9>self) => (T9)self.Value;
        public Any(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9> value) => Value = value.Value;
        /// <summary>
        /// The value stored in the current Any type.
        /// </summary>
        public readonly dynamic Value;
        private Any(dynamic value) => Value = value;
        public override string ToString() => Value.ToString();
        public override bool Equals(object obj) => Value.Equals(obj);
        public override int GetHashCode() => Value.GetHashCode();
        /// <summary>
        /// The type of the value stored in the current Any type.
        /// </summary>
        public Type Type => Value.GetType();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public static readonly IEnumerable<Type> whiteList = new TypeArray<T1, T2, T3, T4, T5, T6, T7, T8, T9>();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public IEnumerable<Type> WhiteList => whiteList;
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public static readonly ImmutableHashSet<Type> whiteSet = new HashSet<Type>(whiteList).ToImmutableHashSet();
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public ImmutableHashSet<Type> WhiteSet => whiteSet;
        public static bool operator ==(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9> right) => left.Value.Equals(right.Value);
        public static bool operator !=(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9> right) => !left.Value.Equals(right.Value);
    }
    public struct Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> : IAny
    {
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(T1 t1) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>((object)t1);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(T2 t2) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>((object)t2);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(T3 t3) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>((object)t3);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(T4 t4) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>((object)t4);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(T5 t5) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>((object)t5);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(T6 t6) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>((object)t6);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(T7 t7) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>((object)t7);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(T8 t8) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>((object)t8);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(T9 t9) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>((object)t9);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(T10 t10) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>((object)t10);
        public static explicit operator T1(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>self) => (T1)self.Value;
        public static explicit operator T2(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>self) => (T2)self.Value;
        public static explicit operator T3(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>self) => (T3)self.Value;
        public static explicit operator T4(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>self) => (T4)self.Value;
        public static explicit operator T5(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>self) => (T5)self.Value;
        public static explicit operator T6(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>self) => (T6)self.Value;
        public static explicit operator T7(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>self) => (T7)self.Value;
        public static explicit operator T8(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>self) => (T8)self.Value;
        public static explicit operator T9(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>self) => (T9)self.Value;
        public static explicit operator T10(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>self) => (T10)self.Value;
        public Any(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> value) => Value = value.Value;
        /// <summary>
        /// The value stored in the current Any type.
        /// </summary>
        public readonly dynamic Value;
        private Any(dynamic value) => Value = value;
        public override string ToString() => Value.ToString();
        public override bool Equals(object obj) => Value.Equals(obj);
        public override int GetHashCode() => Value.GetHashCode();
        /// <summary>
        /// The type of the value stored in the current Any type.
        /// </summary>
        public Type Type => Value.GetType();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public static readonly IEnumerable<Type> whiteList = new TypeArray<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public IEnumerable<Type> WhiteList => whiteList;
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public static readonly ImmutableHashSet<Type> whiteSet = new HashSet<Type>(whiteList).ToImmutableHashSet();
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public ImmutableHashSet<Type> WhiteSet => whiteSet;
        public static bool operator ==(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> right) => left.Value.Equals(right.Value);
        public static bool operator !=(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> right) => !left.Value.Equals(right.Value);
    }
    public struct Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> : IAny
    {
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(T1 t1) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>((object)t1);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(T2 t2) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>((object)t2);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(T3 t3) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>((object)t3);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(T4 t4) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>((object)t4);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(T5 t5) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>((object)t5);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(T6 t6) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>((object)t6);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(T7 t7) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>((object)t7);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(T8 t8) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>((object)t8);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(T9 t9) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>((object)t9);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(T10 t10) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>((object)t10);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(T11 t11) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>((object)t11);
        public static explicit operator T1(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>self) => (T1)self.Value;
        public static explicit operator T2(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>self) => (T2)self.Value;
        public static explicit operator T3(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>self) => (T3)self.Value;
        public static explicit operator T4(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>self) => (T4)self.Value;
        public static explicit operator T5(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>self) => (T5)self.Value;
        public static explicit operator T6(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>self) => (T6)self.Value;
        public static explicit operator T7(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>self) => (T7)self.Value;
        public static explicit operator T8(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>self) => (T8)self.Value;
        public static explicit operator T9(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>self) => (T9)self.Value;
        public static explicit operator T10(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>self) => (T10)self.Value;
        public static explicit operator T11(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>self) => (T11)self.Value;
        public Any(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> value) => Value = value.Value;
        /// <summary>
        /// The value stored in the current Any type.
        /// </summary>
        public readonly dynamic Value;
        private Any(dynamic value) => Value = value;
        public override string ToString() => Value.ToString();
        public override bool Equals(object obj) => Value.Equals(obj);
        public override int GetHashCode() => Value.GetHashCode();
        /// <summary>
        /// The type of the value stored in the current Any type.
        /// </summary>
        public Type Type => Value.GetType();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public static readonly IEnumerable<Type> whiteList = new TypeArray<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public IEnumerable<Type> WhiteList => whiteList;
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public static readonly ImmutableHashSet<Type> whiteSet = new HashSet<Type>(whiteList).ToImmutableHashSet();
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public ImmutableHashSet<Type> WhiteSet => whiteSet;
        public static bool operator ==(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> right) => left.Value.Equals(right.Value);
        public static bool operator !=(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> right) => !left.Value.Equals(right.Value);
    }
    public struct Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> : IAny
    {
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(T1 t1) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>((object)t1);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(T2 t2) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>((object)t2);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(T3 t3) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>((object)t3);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(T4 t4) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>((object)t4);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(T5 t5) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>((object)t5);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(T6 t6) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>((object)t6);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(T7 t7) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>((object)t7);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(T8 t8) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>((object)t8);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(T9 t9) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>((object)t9);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(T10 t10) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>((object)t10);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(T11 t11) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>((object)t11);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(T12 t12) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>((object)t12);
        public static explicit operator T1(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>self) => (T1)self.Value;
        public static explicit operator T2(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>self) => (T2)self.Value;
        public static explicit operator T3(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>self) => (T3)self.Value;
        public static explicit operator T4(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>self) => (T4)self.Value;
        public static explicit operator T5(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>self) => (T5)self.Value;
        public static explicit operator T6(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>self) => (T6)self.Value;
        public static explicit operator T7(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>self) => (T7)self.Value;
        public static explicit operator T8(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>self) => (T8)self.Value;
        public static explicit operator T9(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>self) => (T9)self.Value;
        public static explicit operator T10(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>self) => (T10)self.Value;
        public static explicit operator T11(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>self) => (T11)self.Value;
        public static explicit operator T12(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>self) => (T12)self.Value;
        public Any(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> value) => Value = value.Value;
        /// <summary>
        /// The value stored in the current Any type.
        /// </summary>
        public readonly dynamic Value;
        private Any(dynamic value) => Value = value;
        public override string ToString() => Value.ToString();
        public override bool Equals(object obj) => Value.Equals(obj);
        public override int GetHashCode() => Value.GetHashCode();
        /// <summary>
        /// The type of the value stored in the current Any type.
        /// </summary>
        public Type Type => Value.GetType();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public static readonly IEnumerable<Type> whiteList = new TypeArray<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public IEnumerable<Type> WhiteList => whiteList;
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public static readonly ImmutableHashSet<Type> whiteSet = new HashSet<Type>(whiteList).ToImmutableHashSet();
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public ImmutableHashSet<Type> WhiteSet => whiteSet;
        public static bool operator ==(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> right) => left.Value.Equals(right.Value);
        public static bool operator !=(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> right) => !left.Value.Equals(right.Value);
    }
    public struct Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> : IAny
    {
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(T1 t1) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>((object)t1);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(T2 t2) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>((object)t2);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(T3 t3) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>((object)t3);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(T4 t4) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>((object)t4);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(T5 t5) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>((object)t5);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(T6 t6) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>((object)t6);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(T7 t7) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>((object)t7);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(T8 t8) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>((object)t8);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(T9 t9) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>((object)t9);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(T10 t10) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>((object)t10);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(T11 t11) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>((object)t11);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(T12 t12) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>((object)t12);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(T13 t13) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>((object)t13);
        public static explicit operator T1(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>self) => (T1)self.Value;
        public static explicit operator T2(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>self) => (T2)self.Value;
        public static explicit operator T3(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>self) => (T3)self.Value;
        public static explicit operator T4(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>self) => (T4)self.Value;
        public static explicit operator T5(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>self) => (T5)self.Value;
        public static explicit operator T6(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>self) => (T6)self.Value;
        public static explicit operator T7(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>self) => (T7)self.Value;
        public static explicit operator T8(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>self) => (T8)self.Value;
        public static explicit operator T9(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>self) => (T9)self.Value;
        public static explicit operator T10(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>self) => (T10)self.Value;
        public static explicit operator T11(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>self) => (T11)self.Value;
        public static explicit operator T12(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>self) => (T12)self.Value;
        public static explicit operator T13(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>self) => (T13)self.Value;
        public Any(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> value) => Value = value.Value;
        /// <summary>
        /// The value stored in the current Any type.
        /// </summary>
        public readonly dynamic Value;
        private Any(dynamic value) => Value = value;
        public override string ToString() => Value.ToString();
        public override bool Equals(object obj) => Value.Equals(obj);
        public override int GetHashCode() => Value.GetHashCode();
        /// <summary>
        /// The type of the value stored in the current Any type.
        /// </summary>
        public Type Type => Value.GetType();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public static readonly IEnumerable<Type> whiteList = new TypeArray<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public IEnumerable<Type> WhiteList => whiteList;
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public static readonly ImmutableHashSet<Type> whiteSet = new HashSet<Type>(whiteList).ToImmutableHashSet();
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public ImmutableHashSet<Type> WhiteSet => whiteSet;
        public static bool operator ==(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> right) => left.Value.Equals(right.Value);
        public static bool operator !=(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> right) => !left.Value.Equals(right.Value);
    }
    public struct Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> : IAny
    {
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(T1 t1) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>((object)t1);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(T2 t2) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>((object)t2);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(T3 t3) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>((object)t3);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(T4 t4) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>((object)t4);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(T5 t5) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>((object)t5);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(T6 t6) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>((object)t6);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(T7 t7) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>((object)t7);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(T8 t8) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>((object)t8);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(T9 t9) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>((object)t9);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(T10 t10) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>((object)t10);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(T11 t11) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>((object)t11);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(T12 t12) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>((object)t12);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(T13 t13) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>((object)t13);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(T14 t14) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>((object)t14);
        public static explicit operator T1(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>self) => (T1)self.Value;
        public static explicit operator T2(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>self) => (T2)self.Value;
        public static explicit operator T3(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>self) => (T3)self.Value;
        public static explicit operator T4(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>self) => (T4)self.Value;
        public static explicit operator T5(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>self) => (T5)self.Value;
        public static explicit operator T6(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>self) => (T6)self.Value;
        public static explicit operator T7(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>self) => (T7)self.Value;
        public static explicit operator T8(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>self) => (T8)self.Value;
        public static explicit operator T9(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>self) => (T9)self.Value;
        public static explicit operator T10(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>self) => (T10)self.Value;
        public static explicit operator T11(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>self) => (T11)self.Value;
        public static explicit operator T12(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>self) => (T12)self.Value;
        public static explicit operator T13(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>self) => (T13)self.Value;
        public static explicit operator T14(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>self) => (T14)self.Value;
        public Any(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> value) => Value = value.Value;
        /// <summary>
        /// The value stored in the current Any type.
        /// </summary>
        public readonly dynamic Value;
        private Any(dynamic value) => Value = value;
        public override string ToString() => Value.ToString();
        public override bool Equals(object obj) => Value.Equals(obj);
        public override int GetHashCode() => Value.GetHashCode();
        /// <summary>
        /// The type of the value stored in the current Any type.
        /// </summary>
        public Type Type => Value.GetType();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public static readonly IEnumerable<Type> whiteList = new TypeArray<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public IEnumerable<Type> WhiteList => whiteList;
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public static readonly ImmutableHashSet<Type> whiteSet = new HashSet<Type>(whiteList).ToImmutableHashSet();
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public ImmutableHashSet<Type> WhiteSet => whiteSet;
        public static bool operator ==(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> right) => left.Value.Equals(right.Value);
        public static bool operator !=(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> right) => !left.Value.Equals(right.Value);
    }
    public struct Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> : IAny
    {
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(T1 t1) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>((object)t1);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(T2 t2) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>((object)t2);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(T3 t3) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>((object)t3);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(T4 t4) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>((object)t4);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(T5 t5) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>((object)t5);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(T6 t6) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>((object)t6);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(T7 t7) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>((object)t7);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(T8 t8) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>((object)t8);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(T9 t9) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>((object)t9);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(T10 t10) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>((object)t10);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(T11 t11) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>((object)t11);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(T12 t12) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>((object)t12);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(T13 t13) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>((object)t13);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(T14 t14) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>((object)t14);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(T15 t15) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>((object)t15);
        public static explicit operator T1(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>self) => (T1)self.Value;
        public static explicit operator T2(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>self) => (T2)self.Value;
        public static explicit operator T3(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>self) => (T3)self.Value;
        public static explicit operator T4(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>self) => (T4)self.Value;
        public static explicit operator T5(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>self) => (T5)self.Value;
        public static explicit operator T6(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>self) => (T6)self.Value;
        public static explicit operator T7(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>self) => (T7)self.Value;
        public static explicit operator T8(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>self) => (T8)self.Value;
        public static explicit operator T9(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>self) => (T9)self.Value;
        public static explicit operator T10(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>self) => (T10)self.Value;
        public static explicit operator T11(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>self) => (T11)self.Value;
        public static explicit operator T12(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>self) => (T12)self.Value;
        public static explicit operator T13(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>self) => (T13)self.Value;
        public static explicit operator T14(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>self) => (T14)self.Value;
        public static explicit operator T15(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>self) => (T15)self.Value;
        public Any(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> value) => Value = value.Value;
        /// <summary>
        /// The value stored in the current Any type.
        /// </summary>
        public readonly dynamic Value;
        private Any(dynamic value) => Value = value;
        public override string ToString() => Value.ToString();
        public override bool Equals(object obj) => Value.Equals(obj);
        public override int GetHashCode() => Value.GetHashCode();
        /// <summary>
        /// The type of the value stored in the current Any type.
        /// </summary>
        public Type Type => Value.GetType();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public static readonly IEnumerable<Type> whiteList = new TypeArray<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public IEnumerable<Type> WhiteList => whiteList;
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public static readonly ImmutableHashSet<Type> whiteSet = new HashSet<Type>(whiteList).ToImmutableHashSet();
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public ImmutableHashSet<Type> WhiteSet => whiteSet;
        public static bool operator ==(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> right) => left.Value.Equals(right.Value);
        public static bool operator !=(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> right) => !left.Value.Equals(right.Value);
    }
    public struct Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> : IAny
    {
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(T1 t1) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>((object)t1);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(T2 t2) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>((object)t2);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(T3 t3) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>((object)t3);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(T4 t4) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>((object)t4);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(T5 t5) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>((object)t5);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(T6 t6) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>((object)t6);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(T7 t7) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>((object)t7);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(T8 t8) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>((object)t8);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(T9 t9) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>((object)t9);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(T10 t10) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>((object)t10);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(T11 t11) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>((object)t11);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(T12 t12) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>((object)t12);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(T13 t13) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>((object)t13);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(T14 t14) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>((object)t14);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(T15 t15) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>((object)t15);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(T16 t16) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>((object)t16);
        public static explicit operator T1(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>self) => (T1)self.Value;
        public static explicit operator T2(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>self) => (T2)self.Value;
        public static explicit operator T3(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>self) => (T3)self.Value;
        public static explicit operator T4(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>self) => (T4)self.Value;
        public static explicit operator T5(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>self) => (T5)self.Value;
        public static explicit operator T6(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>self) => (T6)self.Value;
        public static explicit operator T7(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>self) => (T7)self.Value;
        public static explicit operator T8(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>self) => (T8)self.Value;
        public static explicit operator T9(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>self) => (T9)self.Value;
        public static explicit operator T10(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>self) => (T10)self.Value;
        public static explicit operator T11(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>self) => (T11)self.Value;
        public static explicit operator T12(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>self) => (T12)self.Value;
        public static explicit operator T13(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>self) => (T13)self.Value;
        public static explicit operator T14(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>self) => (T14)self.Value;
        public static explicit operator T15(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>self) => (T15)self.Value;
        public static explicit operator T16(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>self) => (T16)self.Value;
        public Any(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> value) => Value = value.Value;
        /// <summary>
        /// The value stored in the current Any type.
        /// </summary>
        public readonly dynamic Value;
        private Any(dynamic value) => Value = value;
        public override string ToString() => Value.ToString();
        public override bool Equals(object obj) => Value.Equals(obj);
        public override int GetHashCode() => Value.GetHashCode();
        /// <summary>
        /// The type of the value stored in the current Any type.
        /// </summary>
        public Type Type => Value.GetType();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public static readonly IEnumerable<Type> whiteList = new TypeArray<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public IEnumerable<Type> WhiteList => whiteList;
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public static readonly ImmutableHashSet<Type> whiteSet = new HashSet<Type>(whiteList).ToImmutableHashSet();
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public ImmutableHashSet<Type> WhiteSet => whiteSet;
        public static bool operator ==(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> right) => left.Value.Equals(right.Value);
        public static bool operator !=(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> right) => !left.Value.Equals(right.Value);
    }
    public struct Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> : IAny
    {
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(T1 t1) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>((object)t1);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(T2 t2) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>((object)t2);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(T3 t3) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>((object)t3);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(T4 t4) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>((object)t4);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(T5 t5) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>((object)t5);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(T6 t6) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>((object)t6);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(T7 t7) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>((object)t7);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(T8 t8) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>((object)t8);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(T9 t9) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>((object)t9);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(T10 t10) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>((object)t10);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(T11 t11) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>((object)t11);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(T12 t12) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>((object)t12);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(T13 t13) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>((object)t13);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(T14 t14) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>((object)t14);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(T15 t15) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>((object)t15);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(T16 t16) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>((object)t16);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(T17 t17) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>((object)t17);
        public static explicit operator T1(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>self) => (T1)self.Value;
        public static explicit operator T2(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>self) => (T2)self.Value;
        public static explicit operator T3(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>self) => (T3)self.Value;
        public static explicit operator T4(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>self) => (T4)self.Value;
        public static explicit operator T5(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>self) => (T5)self.Value;
        public static explicit operator T6(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>self) => (T6)self.Value;
        public static explicit operator T7(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>self) => (T7)self.Value;
        public static explicit operator T8(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>self) => (T8)self.Value;
        public static explicit operator T9(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>self) => (T9)self.Value;
        public static explicit operator T10(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>self) => (T10)self.Value;
        public static explicit operator T11(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>self) => (T11)self.Value;
        public static explicit operator T12(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>self) => (T12)self.Value;
        public static explicit operator T13(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>self) => (T13)self.Value;
        public static explicit operator T14(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>self) => (T14)self.Value;
        public static explicit operator T15(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>self) => (T15)self.Value;
        public static explicit operator T16(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>self) => (T16)self.Value;
        public static explicit operator T17(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>self) => (T17)self.Value;
        public Any(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> value) => Value = value.Value;
        /// <summary>
        /// The value stored in the current Any type.
        /// </summary>
        public readonly dynamic Value;
        private Any(dynamic value) => Value = value;
        public override string ToString() => Value.ToString();
        public override bool Equals(object obj) => Value.Equals(obj);
        public override int GetHashCode() => Value.GetHashCode();
        /// <summary>
        /// The type of the value stored in the current Any type.
        /// </summary>
        public Type Type => Value.GetType();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public static readonly IEnumerable<Type> whiteList = new TypeArray<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public IEnumerable<Type> WhiteList => whiteList;
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public static readonly ImmutableHashSet<Type> whiteSet = new HashSet<Type>(whiteList).ToImmutableHashSet();
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public ImmutableHashSet<Type> WhiteSet => whiteSet;
        public static bool operator ==(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> right) => left.Value.Equals(right.Value);
        public static bool operator !=(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> right) => !left.Value.Equals(right.Value);
    }
    public struct Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> : IAny
    {
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(T1 t1) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>((object)t1);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(T2 t2) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>((object)t2);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(T3 t3) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>((object)t3);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(T4 t4) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>((object)t4);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(T5 t5) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>((object)t5);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(T6 t6) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>((object)t6);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(T7 t7) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>((object)t7);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(T8 t8) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>((object)t8);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(T9 t9) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>((object)t9);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(T10 t10) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>((object)t10);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(T11 t11) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>((object)t11);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(T12 t12) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>((object)t12);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(T13 t13) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>((object)t13);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(T14 t14) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>((object)t14);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(T15 t15) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>((object)t15);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(T16 t16) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>((object)t16);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(T17 t17) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>((object)t17);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(T18 t18) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>((object)t18);
        public static explicit operator T1(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>self) => (T1)self.Value;
        public static explicit operator T2(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>self) => (T2)self.Value;
        public static explicit operator T3(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>self) => (T3)self.Value;
        public static explicit operator T4(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>self) => (T4)self.Value;
        public static explicit operator T5(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>self) => (T5)self.Value;
        public static explicit operator T6(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>self) => (T6)self.Value;
        public static explicit operator T7(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>self) => (T7)self.Value;
        public static explicit operator T8(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>self) => (T8)self.Value;
        public static explicit operator T9(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>self) => (T9)self.Value;
        public static explicit operator T10(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>self) => (T10)self.Value;
        public static explicit operator T11(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>self) => (T11)self.Value;
        public static explicit operator T12(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>self) => (T12)self.Value;
        public static explicit operator T13(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>self) => (T13)self.Value;
        public static explicit operator T14(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>self) => (T14)self.Value;
        public static explicit operator T15(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>self) => (T15)self.Value;
        public static explicit operator T16(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>self) => (T16)self.Value;
        public static explicit operator T17(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>self) => (T17)self.Value;
        public static explicit operator T18(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>self) => (T18)self.Value;
        public Any(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> value) => Value = value.Value;
        /// <summary>
        /// The value stored in the current Any type.
        /// </summary>
        public readonly dynamic Value;
        private Any(dynamic value) => Value = value;
        public override string ToString() => Value.ToString();
        public override bool Equals(object obj) => Value.Equals(obj);
        public override int GetHashCode() => Value.GetHashCode();
        /// <summary>
        /// The type of the value stored in the current Any type.
        /// </summary>
        public Type Type => Value.GetType();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public static readonly IEnumerable<Type> whiteList = new TypeArray<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public IEnumerable<Type> WhiteList => whiteList;
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public static readonly ImmutableHashSet<Type> whiteSet = new HashSet<Type>(whiteList).ToImmutableHashSet();
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public ImmutableHashSet<Type> WhiteSet => whiteSet;
        public static bool operator ==(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> right) => left.Value.Equals(right.Value);
        public static bool operator !=(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> right) => !left.Value.Equals(right.Value);
    }
    public struct Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> : IAny
    {
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(T1 t1) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>((object)t1);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(T2 t2) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>((object)t2);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(T3 t3) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>((object)t3);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(T4 t4) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>((object)t4);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(T5 t5) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>((object)t5);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(T6 t6) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>((object)t6);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(T7 t7) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>((object)t7);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(T8 t8) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>((object)t8);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(T9 t9) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>((object)t9);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(T10 t10) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>((object)t10);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(T11 t11) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>((object)t11);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(T12 t12) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>((object)t12);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(T13 t13) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>((object)t13);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(T14 t14) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>((object)t14);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(T15 t15) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>((object)t15);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(T16 t16) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>((object)t16);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(T17 t17) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>((object)t17);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(T18 t18) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>((object)t18);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(T19 t19) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>((object)t19);
        public static explicit operator T1(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>self) => (T1)self.Value;
        public static explicit operator T2(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>self) => (T2)self.Value;
        public static explicit operator T3(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>self) => (T3)self.Value;
        public static explicit operator T4(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>self) => (T4)self.Value;
        public static explicit operator T5(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>self) => (T5)self.Value;
        public static explicit operator T6(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>self) => (T6)self.Value;
        public static explicit operator T7(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>self) => (T7)self.Value;
        public static explicit operator T8(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>self) => (T8)self.Value;
        public static explicit operator T9(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>self) => (T9)self.Value;
        public static explicit operator T10(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>self) => (T10)self.Value;
        public static explicit operator T11(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>self) => (T11)self.Value;
        public static explicit operator T12(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>self) => (T12)self.Value;
        public static explicit operator T13(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>self) => (T13)self.Value;
        public static explicit operator T14(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>self) => (T14)self.Value;
        public static explicit operator T15(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>self) => (T15)self.Value;
        public static explicit operator T16(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>self) => (T16)self.Value;
        public static explicit operator T17(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>self) => (T17)self.Value;
        public static explicit operator T18(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>self) => (T18)self.Value;
        public static explicit operator T19(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>self) => (T19)self.Value;
        public Any(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> value) => Value = value.Value;
        /// <summary>
        /// The value stored in the current Any type.
        /// </summary>
        public readonly dynamic Value;
        private Any(dynamic value) => Value = value;
        public override string ToString() => Value.ToString();
        public override bool Equals(object obj) => Value.Equals(obj);
        public override int GetHashCode() => Value.GetHashCode();
        /// <summary>
        /// The type of the value stored in the current Any type.
        /// </summary>
        public Type Type => Value.GetType();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public static readonly IEnumerable<Type> whiteList = new TypeArray<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public IEnumerable<Type> WhiteList => whiteList;
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public static readonly ImmutableHashSet<Type> whiteSet = new HashSet<Type>(whiteList).ToImmutableHashSet();
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public ImmutableHashSet<Type> WhiteSet => whiteSet;
        public static bool operator ==(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> right) => left.Value.Equals(right.Value);
        public static bool operator !=(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> right) => !left.Value.Equals(right.Value);
    }
    public struct Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> : IAny
    {
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T1 t1) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>((object)t1);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T2 t2) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>((object)t2);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T3 t3) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>((object)t3);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T4 t4) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>((object)t4);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T5 t5) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>((object)t5);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T6 t6) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>((object)t6);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T7 t7) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>((object)t7);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T8 t8) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>((object)t8);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T9 t9) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>((object)t9);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T10 t10) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>((object)t10);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T11 t11) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>((object)t11);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T12 t12) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>((object)t12);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T13 t13) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>((object)t13);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T14 t14) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>((object)t14);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T15 t15) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>((object)t15);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T16 t16) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>((object)t16);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T17 t17) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>((object)t17);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T18 t18) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>((object)t18);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T19 t19) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>((object)t19);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T20 t20) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>((object)t20);
        public static explicit operator T1(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>self) => (T1)self.Value;
        public static explicit operator T2(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>self) => (T2)self.Value;
        public static explicit operator T3(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>self) => (T3)self.Value;
        public static explicit operator T4(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>self) => (T4)self.Value;
        public static explicit operator T5(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>self) => (T5)self.Value;
        public static explicit operator T6(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>self) => (T6)self.Value;
        public static explicit operator T7(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>self) => (T7)self.Value;
        public static explicit operator T8(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>self) => (T8)self.Value;
        public static explicit operator T9(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>self) => (T9)self.Value;
        public static explicit operator T10(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>self) => (T10)self.Value;
        public static explicit operator T11(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>self) => (T11)self.Value;
        public static explicit operator T12(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>self) => (T12)self.Value;
        public static explicit operator T13(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>self) => (T13)self.Value;
        public static explicit operator T14(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>self) => (T14)self.Value;
        public static explicit operator T15(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>self) => (T15)self.Value;
        public static explicit operator T16(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>self) => (T16)self.Value;
        public static explicit operator T17(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>self) => (T17)self.Value;
        public static explicit operator T18(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>self) => (T18)self.Value;
        public static explicit operator T19(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>self) => (T19)self.Value;
        public static explicit operator T20(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>self) => (T20)self.Value;
        public Any(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> value) => Value = value.Value;
        /// <summary>
        /// The value stored in the current Any type.
        /// </summary>
        public readonly dynamic Value;
        private Any(dynamic value) => Value = value;
        public override string ToString() => Value.ToString();
        public override bool Equals(object obj) => Value.Equals(obj);
        public override int GetHashCode() => Value.GetHashCode();
        /// <summary>
        /// The type of the value stored in the current Any type.
        /// </summary>
        public Type Type => Value.GetType();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public static readonly IEnumerable<Type> whiteList = new TypeArray<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public IEnumerable<Type> WhiteList => whiteList;
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public static readonly ImmutableHashSet<Type> whiteSet = new HashSet<Type>(whiteList).ToImmutableHashSet();
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public ImmutableHashSet<Type> WhiteSet => whiteSet;
        public static bool operator ==(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> right) => left.Value.Equals(right.Value);
        public static bool operator !=(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> right) => !left.Value.Equals(right.Value);
    }
    public struct Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> : IAny
    {
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T1 t1) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>((object)t1);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T2 t2) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>((object)t2);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T3 t3) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>((object)t3);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T4 t4) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>((object)t4);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T5 t5) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>((object)t5);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T6 t6) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>((object)t6);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T7 t7) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>((object)t7);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T8 t8) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>((object)t8);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T9 t9) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>((object)t9);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T10 t10) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>((object)t10);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T11 t11) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>((object)t11);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T12 t12) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>((object)t12);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T13 t13) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>((object)t13);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T14 t14) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>((object)t14);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T15 t15) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>((object)t15);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T16 t16) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>((object)t16);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T17 t17) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>((object)t17);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T18 t18) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>((object)t18);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T19 t19) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>((object)t19);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T20 t20) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>((object)t20);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T21 t21) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>((object)t21);
        public static explicit operator T1(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>self) => (T1)self.Value;
        public static explicit operator T2(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>self) => (T2)self.Value;
        public static explicit operator T3(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>self) => (T3)self.Value;
        public static explicit operator T4(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>self) => (T4)self.Value;
        public static explicit operator T5(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>self) => (T5)self.Value;
        public static explicit operator T6(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>self) => (T6)self.Value;
        public static explicit operator T7(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>self) => (T7)self.Value;
        public static explicit operator T8(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>self) => (T8)self.Value;
        public static explicit operator T9(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>self) => (T9)self.Value;
        public static explicit operator T10(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>self) => (T10)self.Value;
        public static explicit operator T11(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>self) => (T11)self.Value;
        public static explicit operator T12(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>self) => (T12)self.Value;
        public static explicit operator T13(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>self) => (T13)self.Value;
        public static explicit operator T14(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>self) => (T14)self.Value;
        public static explicit operator T15(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>self) => (T15)self.Value;
        public static explicit operator T16(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>self) => (T16)self.Value;
        public static explicit operator T17(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>self) => (T17)self.Value;
        public static explicit operator T18(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>self) => (T18)self.Value;
        public static explicit operator T19(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>self) => (T19)self.Value;
        public static explicit operator T20(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>self) => (T20)self.Value;
        public static explicit operator T21(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>self) => (T21)self.Value;
        public Any(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> value) => Value = value.Value;
        /// <summary>
        /// The value stored in the current Any type.
        /// </summary>
        public readonly dynamic Value;
        private Any(dynamic value) => Value = value;
        public override string ToString() => Value.ToString();
        public override bool Equals(object obj) => Value.Equals(obj);
        public override int GetHashCode() => Value.GetHashCode();
        /// <summary>
        /// The type of the value stored in the current Any type.
        /// </summary>
        public Type Type => Value.GetType();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public static readonly IEnumerable<Type> whiteList = new TypeArray<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public IEnumerable<Type> WhiteList => whiteList;
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public static readonly ImmutableHashSet<Type> whiteSet = new HashSet<Type>(whiteList).ToImmutableHashSet();
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public ImmutableHashSet<Type> WhiteSet => whiteSet;
        public static bool operator ==(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> right) => left.Value.Equals(right.Value);
        public static bool operator !=(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> right) => !left.Value.Equals(right.Value);
    }
    public struct Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> : IAny
    {
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T1 t1) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>((object)t1);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T2 t2) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>((object)t2);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T3 t3) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>((object)t3);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T4 t4) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>((object)t4);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T5 t5) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>((object)t5);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T6 t6) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>((object)t6);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T7 t7) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>((object)t7);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T8 t8) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>((object)t8);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T9 t9) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>((object)t9);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T10 t10) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>((object)t10);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T11 t11) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>((object)t11);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T12 t12) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>((object)t12);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T13 t13) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>((object)t13);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T14 t14) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>((object)t14);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T15 t15) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>((object)t15);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T16 t16) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>((object)t16);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T17 t17) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>((object)t17);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T18 t18) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>((object)t18);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T19 t19) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>((object)t19);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T20 t20) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>((object)t20);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T21 t21) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>((object)t21);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T22 t22) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>((object)t22);
        public static explicit operator T1(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>self) => (T1)self.Value;
        public static explicit operator T2(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>self) => (T2)self.Value;
        public static explicit operator T3(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>self) => (T3)self.Value;
        public static explicit operator T4(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>self) => (T4)self.Value;
        public static explicit operator T5(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>self) => (T5)self.Value;
        public static explicit operator T6(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>self) => (T6)self.Value;
        public static explicit operator T7(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>self) => (T7)self.Value;
        public static explicit operator T8(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>self) => (T8)self.Value;
        public static explicit operator T9(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>self) => (T9)self.Value;
        public static explicit operator T10(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>self) => (T10)self.Value;
        public static explicit operator T11(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>self) => (T11)self.Value;
        public static explicit operator T12(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>self) => (T12)self.Value;
        public static explicit operator T13(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>self) => (T13)self.Value;
        public static explicit operator T14(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>self) => (T14)self.Value;
        public static explicit operator T15(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>self) => (T15)self.Value;
        public static explicit operator T16(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>self) => (T16)self.Value;
        public static explicit operator T17(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>self) => (T17)self.Value;
        public static explicit operator T18(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>self) => (T18)self.Value;
        public static explicit operator T19(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>self) => (T19)self.Value;
        public static explicit operator T20(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>self) => (T20)self.Value;
        public static explicit operator T21(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>self) => (T21)self.Value;
        public static explicit operator T22(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>self) => (T22)self.Value;
        public Any(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> value) => Value = value.Value;
        /// <summary>
        /// The value stored in the current Any type.
        /// </summary>
        public readonly dynamic Value;
        private Any(dynamic value) => Value = value;
        public override string ToString() => Value.ToString();
        public override bool Equals(object obj) => Value.Equals(obj);
        public override int GetHashCode() => Value.GetHashCode();
        /// <summary>
        /// The type of the value stored in the current Any type.
        /// </summary>
        public Type Type => Value.GetType();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public static readonly IEnumerable<Type> whiteList = new TypeArray<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public IEnumerable<Type> WhiteList => whiteList;
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public static readonly ImmutableHashSet<Type> whiteSet = new HashSet<Type>(whiteList).ToImmutableHashSet();
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public ImmutableHashSet<Type> WhiteSet => whiteSet;
        public static bool operator ==(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> right) => left.Value.Equals(right.Value);
        public static bool operator !=(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> right) => !left.Value.Equals(right.Value);
    }
    public struct Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> : IAny
    {
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T1 t1) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>((object)t1);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T2 t2) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>((object)t2);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T3 t3) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>((object)t3);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T4 t4) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>((object)t4);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T5 t5) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>((object)t5);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T6 t6) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>((object)t6);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T7 t7) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>((object)t7);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T8 t8) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>((object)t8);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T9 t9) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>((object)t9);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T10 t10) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>((object)t10);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T11 t11) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>((object)t11);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T12 t12) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>((object)t12);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T13 t13) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>((object)t13);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T14 t14) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>((object)t14);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T15 t15) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>((object)t15);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T16 t16) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>((object)t16);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T17 t17) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>((object)t17);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T18 t18) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>((object)t18);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T19 t19) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>((object)t19);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T20 t20) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>((object)t20);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T21 t21) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>((object)t21);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T22 t22) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>((object)t22);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T23 t23) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>((object)t23);
        public static explicit operator T1(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>self) => (T1)self.Value;
        public static explicit operator T2(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>self) => (T2)self.Value;
        public static explicit operator T3(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>self) => (T3)self.Value;
        public static explicit operator T4(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>self) => (T4)self.Value;
        public static explicit operator T5(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>self) => (T5)self.Value;
        public static explicit operator T6(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>self) => (T6)self.Value;
        public static explicit operator T7(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>self) => (T7)self.Value;
        public static explicit operator T8(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>self) => (T8)self.Value;
        public static explicit operator T9(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>self) => (T9)self.Value;
        public static explicit operator T10(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>self) => (T10)self.Value;
        public static explicit operator T11(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>self) => (T11)self.Value;
        public static explicit operator T12(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>self) => (T12)self.Value;
        public static explicit operator T13(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>self) => (T13)self.Value;
        public static explicit operator T14(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>self) => (T14)self.Value;
        public static explicit operator T15(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>self) => (T15)self.Value;
        public static explicit operator T16(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>self) => (T16)self.Value;
        public static explicit operator T17(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>self) => (T17)self.Value;
        public static explicit operator T18(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>self) => (T18)self.Value;
        public static explicit operator T19(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>self) => (T19)self.Value;
        public static explicit operator T20(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>self) => (T20)self.Value;
        public static explicit operator T21(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>self) => (T21)self.Value;
        public static explicit operator T22(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>self) => (T22)self.Value;
        public static explicit operator T23(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>self) => (T23)self.Value;
        public Any(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> value) => Value = value.Value;
        /// <summary>
        /// The value stored in the current Any type.
        /// </summary>
        public readonly dynamic Value;
        private Any(dynamic value) => Value = value;
        public override string ToString() => Value.ToString();
        public override bool Equals(object obj) => Value.Equals(obj);
        public override int GetHashCode() => Value.GetHashCode();
        /// <summary>
        /// The type of the value stored in the current Any type.
        /// </summary>
        public Type Type => Value.GetType();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public static readonly IEnumerable<Type> whiteList = new TypeArray<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public IEnumerable<Type> WhiteList => whiteList;
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public static readonly ImmutableHashSet<Type> whiteSet = new HashSet<Type>(whiteList).ToImmutableHashSet();
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public ImmutableHashSet<Type> WhiteSet => whiteSet;
        public static bool operator ==(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> right) => left.Value.Equals(right.Value);
        public static bool operator !=(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> right) => !left.Value.Equals(right.Value);
    }
    public struct Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> : IAny
    {
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T1 t1) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>((object)t1);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T2 t2) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>((object)t2);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T3 t3) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>((object)t3);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T4 t4) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>((object)t4);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T5 t5) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>((object)t5);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T6 t6) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>((object)t6);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T7 t7) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>((object)t7);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T8 t8) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>((object)t8);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T9 t9) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>((object)t9);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T10 t10) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>((object)t10);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T11 t11) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>((object)t11);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T12 t12) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>((object)t12);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T13 t13) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>((object)t13);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T14 t14) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>((object)t14);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T15 t15) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>((object)t15);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T16 t16) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>((object)t16);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T17 t17) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>((object)t17);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T18 t18) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>((object)t18);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T19 t19) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>((object)t19);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T20 t20) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>((object)t20);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T21 t21) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>((object)t21);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T22 t22) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>((object)t22);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T23 t23) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>((object)t23);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T24 t24) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>((object)t24);
        public static explicit operator T1(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>self) => (T1)self.Value;
        public static explicit operator T2(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>self) => (T2)self.Value;
        public static explicit operator T3(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>self) => (T3)self.Value;
        public static explicit operator T4(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>self) => (T4)self.Value;
        public static explicit operator T5(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>self) => (T5)self.Value;
        public static explicit operator T6(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>self) => (T6)self.Value;
        public static explicit operator T7(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>self) => (T7)self.Value;
        public static explicit operator T8(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>self) => (T8)self.Value;
        public static explicit operator T9(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>self) => (T9)self.Value;
        public static explicit operator T10(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>self) => (T10)self.Value;
        public static explicit operator T11(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>self) => (T11)self.Value;
        public static explicit operator T12(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>self) => (T12)self.Value;
        public static explicit operator T13(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>self) => (T13)self.Value;
        public static explicit operator T14(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>self) => (T14)self.Value;
        public static explicit operator T15(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>self) => (T15)self.Value;
        public static explicit operator T16(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>self) => (T16)self.Value;
        public static explicit operator T17(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>self) => (T17)self.Value;
        public static explicit operator T18(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>self) => (T18)self.Value;
        public static explicit operator T19(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>self) => (T19)self.Value;
        public static explicit operator T20(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>self) => (T20)self.Value;
        public static explicit operator T21(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>self) => (T21)self.Value;
        public static explicit operator T22(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>self) => (T22)self.Value;
        public static explicit operator T23(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>self) => (T23)self.Value;
        public static explicit operator T24(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>self) => (T24)self.Value;
        public Any(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> value) => Value = value.Value;
        /// <summary>
        /// The value stored in the current Any type.
        /// </summary>
        public readonly dynamic Value;
        private Any(dynamic value) => Value = value;
        public override string ToString() => Value.ToString();
        public override bool Equals(object obj) => Value.Equals(obj);
        public override int GetHashCode() => Value.GetHashCode();
        /// <summary>
        /// The type of the value stored in the current Any type.
        /// </summary>
        public Type Type => Value.GetType();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public static readonly IEnumerable<Type> whiteList = new TypeArray<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public IEnumerable<Type> WhiteList => whiteList;
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public static readonly ImmutableHashSet<Type> whiteSet = new HashSet<Type>(whiteList).ToImmutableHashSet();
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public ImmutableHashSet<Type> WhiteSet => whiteSet;
        public static bool operator ==(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> right) => left.Value.Equals(right.Value);
        public static bool operator !=(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> right) => !left.Value.Equals(right.Value);
    }
    public struct Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> : IAny
    {
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T1 t1) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>((object)t1);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T2 t2) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>((object)t2);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T3 t3) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>((object)t3);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T4 t4) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>((object)t4);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T5 t5) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>((object)t5);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T6 t6) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>((object)t6);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T7 t7) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>((object)t7);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T8 t8) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>((object)t8);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T9 t9) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>((object)t9);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T10 t10) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>((object)t10);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T11 t11) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>((object)t11);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T12 t12) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>((object)t12);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T13 t13) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>((object)t13);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T14 t14) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>((object)t14);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T15 t15) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>((object)t15);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T16 t16) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>((object)t16);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T17 t17) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>((object)t17);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T18 t18) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>((object)t18);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T19 t19) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>((object)t19);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T20 t20) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>((object)t20);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T21 t21) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>((object)t21);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T22 t22) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>((object)t22);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T23 t23) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>((object)t23);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T24 t24) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>((object)t24);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T25 t25) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>((object)t25);
        public static explicit operator T1(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>self) => (T1)self.Value;
        public static explicit operator T2(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>self) => (T2)self.Value;
        public static explicit operator T3(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>self) => (T3)self.Value;
        public static explicit operator T4(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>self) => (T4)self.Value;
        public static explicit operator T5(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>self) => (T5)self.Value;
        public static explicit operator T6(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>self) => (T6)self.Value;
        public static explicit operator T7(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>self) => (T7)self.Value;
        public static explicit operator T8(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>self) => (T8)self.Value;
        public static explicit operator T9(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>self) => (T9)self.Value;
        public static explicit operator T10(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>self) => (T10)self.Value;
        public static explicit operator T11(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>self) => (T11)self.Value;
        public static explicit operator T12(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>self) => (T12)self.Value;
        public static explicit operator T13(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>self) => (T13)self.Value;
        public static explicit operator T14(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>self) => (T14)self.Value;
        public static explicit operator T15(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>self) => (T15)self.Value;
        public static explicit operator T16(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>self) => (T16)self.Value;
        public static explicit operator T17(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>self) => (T17)self.Value;
        public static explicit operator T18(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>self) => (T18)self.Value;
        public static explicit operator T19(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>self) => (T19)self.Value;
        public static explicit operator T20(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>self) => (T20)self.Value;
        public static explicit operator T21(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>self) => (T21)self.Value;
        public static explicit operator T22(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>self) => (T22)self.Value;
        public static explicit operator T23(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>self) => (T23)self.Value;
        public static explicit operator T24(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>self) => (T24)self.Value;
        public static explicit operator T25(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>self) => (T25)self.Value;
        public Any(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> value) => Value = value.Value;
        /// <summary>
        /// The value stored in the current Any type.
        /// </summary>
        public readonly dynamic Value;
        private Any(dynamic value) => Value = value;
        public override string ToString() => Value.ToString();
        public override bool Equals(object obj) => Value.Equals(obj);
        public override int GetHashCode() => Value.GetHashCode();
        /// <summary>
        /// The type of the value stored in the current Any type.
        /// </summary>
        public Type Type => Value.GetType();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public static readonly IEnumerable<Type> whiteList = new TypeArray<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public IEnumerable<Type> WhiteList => whiteList;
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public static readonly ImmutableHashSet<Type> whiteSet = new HashSet<Type>(whiteList).ToImmutableHashSet();
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public ImmutableHashSet<Type> WhiteSet => whiteSet;
        public static bool operator ==(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> right) => left.Value.Equals(right.Value);
        public static bool operator !=(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> right) => !left.Value.Equals(right.Value);
    }
    public struct Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> : IAny
    {
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T1 t1) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>((object)t1);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T2 t2) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>((object)t2);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T3 t3) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>((object)t3);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T4 t4) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>((object)t4);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T5 t5) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>((object)t5);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T6 t6) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>((object)t6);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T7 t7) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>((object)t7);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T8 t8) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>((object)t8);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T9 t9) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>((object)t9);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T10 t10) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>((object)t10);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T11 t11) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>((object)t11);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T12 t12) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>((object)t12);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T13 t13) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>((object)t13);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T14 t14) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>((object)t14);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T15 t15) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>((object)t15);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T16 t16) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>((object)t16);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T17 t17) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>((object)t17);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T18 t18) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>((object)t18);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T19 t19) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>((object)t19);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T20 t20) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>((object)t20);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T21 t21) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>((object)t21);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T22 t22) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>((object)t22);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T23 t23) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>((object)t23);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T24 t24) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>((object)t24);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T25 t25) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>((object)t25);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T26 t26) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>((object)t26);
        public static explicit operator T1(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>self) => (T1)self.Value;
        public static explicit operator T2(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>self) => (T2)self.Value;
        public static explicit operator T3(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>self) => (T3)self.Value;
        public static explicit operator T4(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>self) => (T4)self.Value;
        public static explicit operator T5(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>self) => (T5)self.Value;
        public static explicit operator T6(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>self) => (T6)self.Value;
        public static explicit operator T7(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>self) => (T7)self.Value;
        public static explicit operator T8(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>self) => (T8)self.Value;
        public static explicit operator T9(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>self) => (T9)self.Value;
        public static explicit operator T10(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>self) => (T10)self.Value;
        public static explicit operator T11(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>self) => (T11)self.Value;
        public static explicit operator T12(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>self) => (T12)self.Value;
        public static explicit operator T13(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>self) => (T13)self.Value;
        public static explicit operator T14(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>self) => (T14)self.Value;
        public static explicit operator T15(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>self) => (T15)self.Value;
        public static explicit operator T16(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>self) => (T16)self.Value;
        public static explicit operator T17(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>self) => (T17)self.Value;
        public static explicit operator T18(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>self) => (T18)self.Value;
        public static explicit operator T19(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>self) => (T19)self.Value;
        public static explicit operator T20(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>self) => (T20)self.Value;
        public static explicit operator T21(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>self) => (T21)self.Value;
        public static explicit operator T22(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>self) => (T22)self.Value;
        public static explicit operator T23(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>self) => (T23)self.Value;
        public static explicit operator T24(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>self) => (T24)self.Value;
        public static explicit operator T25(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>self) => (T25)self.Value;
        public static explicit operator T26(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>self) => (T26)self.Value;
        public Any(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> value) => Value = value.Value;
        /// <summary>
        /// The value stored in the current Any type.
        /// </summary>
        public readonly dynamic Value;
        private Any(dynamic value) => Value = value;
        public override string ToString() => Value.ToString();
        public override bool Equals(object obj) => Value.Equals(obj);
        public override int GetHashCode() => Value.GetHashCode();
        /// <summary>
        /// The type of the value stored in the current Any type.
        /// </summary>
        public Type Type => Value.GetType();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public static readonly IEnumerable<Type> whiteList = new TypeArray<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public IEnumerable<Type> WhiteList => whiteList;
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public static readonly ImmutableHashSet<Type> whiteSet = new HashSet<Type>(whiteList).ToImmutableHashSet();
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public ImmutableHashSet<Type> WhiteSet => whiteSet;
        public static bool operator ==(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> right) => left.Value.Equals(right.Value);
        public static bool operator !=(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> right) => !left.Value.Equals(right.Value);
    }
    public struct Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> : IAny
    {
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T1 t1) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>((object)t1);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T2 t2) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>((object)t2);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T3 t3) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>((object)t3);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T4 t4) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>((object)t4);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T5 t5) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>((object)t5);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T6 t6) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>((object)t6);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T7 t7) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>((object)t7);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T8 t8) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>((object)t8);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T9 t9) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>((object)t9);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T10 t10) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>((object)t10);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T11 t11) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>((object)t11);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T12 t12) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>((object)t12);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T13 t13) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>((object)t13);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T14 t14) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>((object)t14);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T15 t15) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>((object)t15);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T16 t16) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>((object)t16);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T17 t17) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>((object)t17);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T18 t18) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>((object)t18);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T19 t19) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>((object)t19);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T20 t20) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>((object)t20);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T21 t21) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>((object)t21);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T22 t22) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>((object)t22);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T23 t23) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>((object)t23);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T24 t24) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>((object)t24);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T25 t25) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>((object)t25);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T26 t26) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>((object)t26);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T27 t27) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>((object)t27);
        public static explicit operator T1(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>self) => (T1)self.Value;
        public static explicit operator T2(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>self) => (T2)self.Value;
        public static explicit operator T3(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>self) => (T3)self.Value;
        public static explicit operator T4(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>self) => (T4)self.Value;
        public static explicit operator T5(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>self) => (T5)self.Value;
        public static explicit operator T6(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>self) => (T6)self.Value;
        public static explicit operator T7(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>self) => (T7)self.Value;
        public static explicit operator T8(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>self) => (T8)self.Value;
        public static explicit operator T9(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>self) => (T9)self.Value;
        public static explicit operator T10(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>self) => (T10)self.Value;
        public static explicit operator T11(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>self) => (T11)self.Value;
        public static explicit operator T12(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>self) => (T12)self.Value;
        public static explicit operator T13(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>self) => (T13)self.Value;
        public static explicit operator T14(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>self) => (T14)self.Value;
        public static explicit operator T15(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>self) => (T15)self.Value;
        public static explicit operator T16(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>self) => (T16)self.Value;
        public static explicit operator T17(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>self) => (T17)self.Value;
        public static explicit operator T18(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>self) => (T18)self.Value;
        public static explicit operator T19(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>self) => (T19)self.Value;
        public static explicit operator T20(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>self) => (T20)self.Value;
        public static explicit operator T21(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>self) => (T21)self.Value;
        public static explicit operator T22(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>self) => (T22)self.Value;
        public static explicit operator T23(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>self) => (T23)self.Value;
        public static explicit operator T24(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>self) => (T24)self.Value;
        public static explicit operator T25(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>self) => (T25)self.Value;
        public static explicit operator T26(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>self) => (T26)self.Value;
        public static explicit operator T27(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>self) => (T27)self.Value;
        public Any(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> value) => Value = value.Value;
        /// <summary>
        /// The value stored in the current Any type.
        /// </summary>
        public readonly dynamic Value;
        private Any(dynamic value) => Value = value;
        public override string ToString() => Value.ToString();
        public override bool Equals(object obj) => Value.Equals(obj);
        public override int GetHashCode() => Value.GetHashCode();
        /// <summary>
        /// The type of the value stored in the current Any type.
        /// </summary>
        public Type Type => Value.GetType();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public static readonly IEnumerable<Type> whiteList = new TypeArray<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public IEnumerable<Type> WhiteList => whiteList;
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public static readonly ImmutableHashSet<Type> whiteSet = new HashSet<Type>(whiteList).ToImmutableHashSet();
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public ImmutableHashSet<Type> WhiteSet => whiteSet;
        public static bool operator ==(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> right) => left.Value.Equals(right.Value);
        public static bool operator !=(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> right) => !left.Value.Equals(right.Value);
    }
    public struct Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> : IAny
    {
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T1 t1) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>((object)t1);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T2 t2) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>((object)t2);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T3 t3) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>((object)t3);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T4 t4) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>((object)t4);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T5 t5) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>((object)t5);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T6 t6) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>((object)t6);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T7 t7) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>((object)t7);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T8 t8) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>((object)t8);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T9 t9) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>((object)t9);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T10 t10) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>((object)t10);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T11 t11) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>((object)t11);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T12 t12) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>((object)t12);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T13 t13) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>((object)t13);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T14 t14) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>((object)t14);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T15 t15) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>((object)t15);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T16 t16) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>((object)t16);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T17 t17) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>((object)t17);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T18 t18) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>((object)t18);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T19 t19) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>((object)t19);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T20 t20) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>((object)t20);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T21 t21) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>((object)t21);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T22 t22) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>((object)t22);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T23 t23) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>((object)t23);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T24 t24) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>((object)t24);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T25 t25) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>((object)t25);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T26 t26) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>((object)t26);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T27 t27) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>((object)t27);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T28 t28) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>((object)t28);
        public static explicit operator T1(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>self) => (T1)self.Value;
        public static explicit operator T2(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>self) => (T2)self.Value;
        public static explicit operator T3(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>self) => (T3)self.Value;
        public static explicit operator T4(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>self) => (T4)self.Value;
        public static explicit operator T5(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>self) => (T5)self.Value;
        public static explicit operator T6(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>self) => (T6)self.Value;
        public static explicit operator T7(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>self) => (T7)self.Value;
        public static explicit operator T8(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>self) => (T8)self.Value;
        public static explicit operator T9(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>self) => (T9)self.Value;
        public static explicit operator T10(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>self) => (T10)self.Value;
        public static explicit operator T11(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>self) => (T11)self.Value;
        public static explicit operator T12(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>self) => (T12)self.Value;
        public static explicit operator T13(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>self) => (T13)self.Value;
        public static explicit operator T14(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>self) => (T14)self.Value;
        public static explicit operator T15(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>self) => (T15)self.Value;
        public static explicit operator T16(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>self) => (T16)self.Value;
        public static explicit operator T17(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>self) => (T17)self.Value;
        public static explicit operator T18(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>self) => (T18)self.Value;
        public static explicit operator T19(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>self) => (T19)self.Value;
        public static explicit operator T20(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>self) => (T20)self.Value;
        public static explicit operator T21(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>self) => (T21)self.Value;
        public static explicit operator T22(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>self) => (T22)self.Value;
        public static explicit operator T23(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>self) => (T23)self.Value;
        public static explicit operator T24(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>self) => (T24)self.Value;
        public static explicit operator T25(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>self) => (T25)self.Value;
        public static explicit operator T26(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>self) => (T26)self.Value;
        public static explicit operator T27(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>self) => (T27)self.Value;
        public static explicit operator T28(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>self) => (T28)self.Value;
        public Any(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> value) => Value = value.Value;
        /// <summary>
        /// The value stored in the current Any type.
        /// </summary>
        public readonly dynamic Value;
        private Any(dynamic value) => Value = value;
        public override string ToString() => Value.ToString();
        public override bool Equals(object obj) => Value.Equals(obj);
        public override int GetHashCode() => Value.GetHashCode();
        /// <summary>
        /// The type of the value stored in the current Any type.
        /// </summary>
        public Type Type => Value.GetType();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public static readonly IEnumerable<Type> whiteList = new TypeArray<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public IEnumerable<Type> WhiteList => whiteList;
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public static readonly ImmutableHashSet<Type> whiteSet = new HashSet<Type>(whiteList).ToImmutableHashSet();
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public ImmutableHashSet<Type> WhiteSet => whiteSet;
        public static bool operator ==(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> right) => left.Value.Equals(right.Value);
        public static bool operator !=(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> right) => !left.Value.Equals(right.Value);
    }
    public struct Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> : IAny
    {
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T1 t1) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>((object)t1);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T2 t2) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>((object)t2);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T3 t3) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>((object)t3);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T4 t4) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>((object)t4);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T5 t5) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>((object)t5);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T6 t6) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>((object)t6);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T7 t7) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>((object)t7);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T8 t8) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>((object)t8);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T9 t9) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>((object)t9);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T10 t10) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>((object)t10);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T11 t11) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>((object)t11);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T12 t12) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>((object)t12);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T13 t13) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>((object)t13);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T14 t14) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>((object)t14);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T15 t15) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>((object)t15);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T16 t16) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>((object)t16);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T17 t17) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>((object)t17);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T18 t18) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>((object)t18);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T19 t19) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>((object)t19);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T20 t20) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>((object)t20);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T21 t21) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>((object)t21);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T22 t22) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>((object)t22);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T23 t23) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>((object)t23);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T24 t24) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>((object)t24);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T25 t25) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>((object)t25);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T26 t26) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>((object)t26);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T27 t27) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>((object)t27);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T28 t28) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>((object)t28);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T29 t29) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>((object)t29);
        public static explicit operator T1(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>self) => (T1)self.Value;
        public static explicit operator T2(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>self) => (T2)self.Value;
        public static explicit operator T3(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>self) => (T3)self.Value;
        public static explicit operator T4(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>self) => (T4)self.Value;
        public static explicit operator T5(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>self) => (T5)self.Value;
        public static explicit operator T6(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>self) => (T6)self.Value;
        public static explicit operator T7(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>self) => (T7)self.Value;
        public static explicit operator T8(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>self) => (T8)self.Value;
        public static explicit operator T9(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>self) => (T9)self.Value;
        public static explicit operator T10(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>self) => (T10)self.Value;
        public static explicit operator T11(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>self) => (T11)self.Value;
        public static explicit operator T12(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>self) => (T12)self.Value;
        public static explicit operator T13(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>self) => (T13)self.Value;
        public static explicit operator T14(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>self) => (T14)self.Value;
        public static explicit operator T15(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>self) => (T15)self.Value;
        public static explicit operator T16(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>self) => (T16)self.Value;
        public static explicit operator T17(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>self) => (T17)self.Value;
        public static explicit operator T18(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>self) => (T18)self.Value;
        public static explicit operator T19(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>self) => (T19)self.Value;
        public static explicit operator T20(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>self) => (T20)self.Value;
        public static explicit operator T21(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>self) => (T21)self.Value;
        public static explicit operator T22(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>self) => (T22)self.Value;
        public static explicit operator T23(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>self) => (T23)self.Value;
        public static explicit operator T24(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>self) => (T24)self.Value;
        public static explicit operator T25(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>self) => (T25)self.Value;
        public static explicit operator T26(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>self) => (T26)self.Value;
        public static explicit operator T27(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>self) => (T27)self.Value;
        public static explicit operator T28(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>self) => (T28)self.Value;
        public static explicit operator T29(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>self) => (T29)self.Value;
        public Any(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> value) => Value = value.Value;
        /// <summary>
        /// The value stored in the current Any type.
        /// </summary>
        public readonly dynamic Value;
        private Any(dynamic value) => Value = value;
        public override string ToString() => Value.ToString();
        public override bool Equals(object obj) => Value.Equals(obj);
        public override int GetHashCode() => Value.GetHashCode();
        /// <summary>
        /// The type of the value stored in the current Any type.
        /// </summary>
        public Type Type => Value.GetType();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public static readonly IEnumerable<Type> whiteList = new TypeArray<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public IEnumerable<Type> WhiteList => whiteList;
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public static readonly ImmutableHashSet<Type> whiteSet = new HashSet<Type>(whiteList).ToImmutableHashSet();
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public ImmutableHashSet<Type> WhiteSet => whiteSet;
        public static bool operator ==(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> right) => left.Value.Equals(right.Value);
        public static bool operator !=(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> right) => !left.Value.Equals(right.Value);
    }
    public struct Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> : IAny
    {
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T1 t1) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>((object)t1);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T2 t2) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>((object)t2);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T3 t3) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>((object)t3);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T4 t4) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>((object)t4);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T5 t5) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>((object)t5);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T6 t6) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>((object)t6);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T7 t7) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>((object)t7);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T8 t8) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>((object)t8);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T9 t9) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>((object)t9);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T10 t10) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>((object)t10);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T11 t11) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>((object)t11);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T12 t12) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>((object)t12);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T13 t13) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>((object)t13);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T14 t14) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>((object)t14);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T15 t15) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>((object)t15);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T16 t16) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>((object)t16);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T17 t17) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>((object)t17);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T18 t18) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>((object)t18);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T19 t19) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>((object)t19);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T20 t20) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>((object)t20);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T21 t21) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>((object)t21);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T22 t22) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>((object)t22);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T23 t23) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>((object)t23);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T24 t24) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>((object)t24);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T25 t25) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>((object)t25);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T26 t26) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>((object)t26);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T27 t27) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>((object)t27);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T28 t28) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>((object)t28);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T29 t29) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>((object)t29);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T30 t30) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>((object)t30);
        public static explicit operator T1(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>self) => (T1)self.Value;
        public static explicit operator T2(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>self) => (T2)self.Value;
        public static explicit operator T3(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>self) => (T3)self.Value;
        public static explicit operator T4(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>self) => (T4)self.Value;
        public static explicit operator T5(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>self) => (T5)self.Value;
        public static explicit operator T6(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>self) => (T6)self.Value;
        public static explicit operator T7(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>self) => (T7)self.Value;
        public static explicit operator T8(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>self) => (T8)self.Value;
        public static explicit operator T9(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>self) => (T9)self.Value;
        public static explicit operator T10(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>self) => (T10)self.Value;
        public static explicit operator T11(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>self) => (T11)self.Value;
        public static explicit operator T12(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>self) => (T12)self.Value;
        public static explicit operator T13(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>self) => (T13)self.Value;
        public static explicit operator T14(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>self) => (T14)self.Value;
        public static explicit operator T15(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>self) => (T15)self.Value;
        public static explicit operator T16(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>self) => (T16)self.Value;
        public static explicit operator T17(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>self) => (T17)self.Value;
        public static explicit operator T18(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>self) => (T18)self.Value;
        public static explicit operator T19(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>self) => (T19)self.Value;
        public static explicit operator T20(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>self) => (T20)self.Value;
        public static explicit operator T21(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>self) => (T21)self.Value;
        public static explicit operator T22(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>self) => (T22)self.Value;
        public static explicit operator T23(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>self) => (T23)self.Value;
        public static explicit operator T24(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>self) => (T24)self.Value;
        public static explicit operator T25(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>self) => (T25)self.Value;
        public static explicit operator T26(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>self) => (T26)self.Value;
        public static explicit operator T27(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>self) => (T27)self.Value;
        public static explicit operator T28(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>self) => (T28)self.Value;
        public static explicit operator T29(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>self) => (T29)self.Value;
        public static explicit operator T30(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>self) => (T30)self.Value;
        public Any(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> value) => Value = value.Value;
        /// <summary>
        /// The value stored in the current Any type.
        /// </summary>
        public readonly dynamic Value;
        private Any(dynamic value) => Value = value;
        public override string ToString() => Value.ToString();
        public override bool Equals(object obj) => Value.Equals(obj);
        public override int GetHashCode() => Value.GetHashCode();
        /// <summary>
        /// The type of the value stored in the current Any type.
        /// </summary>
        public Type Type => Value.GetType();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public static readonly IEnumerable<Type> whiteList = new TypeArray<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public IEnumerable<Type> WhiteList => whiteList;
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public static readonly ImmutableHashSet<Type> whiteSet = new HashSet<Type>(whiteList).ToImmutableHashSet();
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public ImmutableHashSet<Type> WhiteSet => whiteSet;
        public static bool operator ==(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> right) => left.Value.Equals(right.Value);
        public static bool operator !=(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> right) => !left.Value.Equals(right.Value);
    }
    public struct Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> : IAny
    {
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T1 t1) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>((object)t1);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T2 t2) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>((object)t2);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T3 t3) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>((object)t3);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T4 t4) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>((object)t4);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T5 t5) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>((object)t5);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T6 t6) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>((object)t6);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T7 t7) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>((object)t7);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T8 t8) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>((object)t8);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T9 t9) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>((object)t9);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T10 t10) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>((object)t10);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T11 t11) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>((object)t11);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T12 t12) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>((object)t12);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T13 t13) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>((object)t13);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T14 t14) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>((object)t14);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T15 t15) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>((object)t15);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T16 t16) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>((object)t16);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T17 t17) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>((object)t17);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T18 t18) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>((object)t18);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T19 t19) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>((object)t19);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T20 t20) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>((object)t20);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T21 t21) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>((object)t21);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T22 t22) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>((object)t22);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T23 t23) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>((object)t23);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T24 t24) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>((object)t24);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T25 t25) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>((object)t25);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T26 t26) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>((object)t26);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T27 t27) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>((object)t27);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T28 t28) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>((object)t28);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T29 t29) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>((object)t29);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T30 t30) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>((object)t30);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T31 t31) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>((object)t31);
        public static explicit operator T1(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>self) => (T1)self.Value;
        public static explicit operator T2(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>self) => (T2)self.Value;
        public static explicit operator T3(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>self) => (T3)self.Value;
        public static explicit operator T4(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>self) => (T4)self.Value;
        public static explicit operator T5(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>self) => (T5)self.Value;
        public static explicit operator T6(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>self) => (T6)self.Value;
        public static explicit operator T7(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>self) => (T7)self.Value;
        public static explicit operator T8(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>self) => (T8)self.Value;
        public static explicit operator T9(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>self) => (T9)self.Value;
        public static explicit operator T10(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>self) => (T10)self.Value;
        public static explicit operator T11(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>self) => (T11)self.Value;
        public static explicit operator T12(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>self) => (T12)self.Value;
        public static explicit operator T13(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>self) => (T13)self.Value;
        public static explicit operator T14(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>self) => (T14)self.Value;
        public static explicit operator T15(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>self) => (T15)self.Value;
        public static explicit operator T16(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>self) => (T16)self.Value;
        public static explicit operator T17(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>self) => (T17)self.Value;
        public static explicit operator T18(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>self) => (T18)self.Value;
        public static explicit operator T19(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>self) => (T19)self.Value;
        public static explicit operator T20(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>self) => (T20)self.Value;
        public static explicit operator T21(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>self) => (T21)self.Value;
        public static explicit operator T22(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>self) => (T22)self.Value;
        public static explicit operator T23(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>self) => (T23)self.Value;
        public static explicit operator T24(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>self) => (T24)self.Value;
        public static explicit operator T25(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>self) => (T25)self.Value;
        public static explicit operator T26(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>self) => (T26)self.Value;
        public static explicit operator T27(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>self) => (T27)self.Value;
        public static explicit operator T28(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>self) => (T28)self.Value;
        public static explicit operator T29(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>self) => (T29)self.Value;
        public static explicit operator T30(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>self) => (T30)self.Value;
        public static explicit operator T31(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>self) => (T31)self.Value;
        public Any(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> value) => Value = value.Value;
        /// <summary>
        /// The value stored in the current Any type.
        /// </summary>
        public readonly dynamic Value;
        private Any(dynamic value) => Value = value;
        public override string ToString() => Value.ToString();
        public override bool Equals(object obj) => Value.Equals(obj);
        public override int GetHashCode() => Value.GetHashCode();
        /// <summary>
        /// The type of the value stored in the current Any type.
        /// </summary>
        public Type Type => Value.GetType();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public static readonly IEnumerable<Type> whiteList = new TypeArray<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public IEnumerable<Type> WhiteList => whiteList;
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public static readonly ImmutableHashSet<Type> whiteSet = new HashSet<Type>(whiteList).ToImmutableHashSet();
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public ImmutableHashSet<Type> WhiteSet => whiteSet;
        public static bool operator ==(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> right) => left.Value.Equals(right.Value);
        public static bool operator !=(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> right) => !left.Value.Equals(right.Value);
    }
    public struct Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> : IAny
    {
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T1 t1) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>((object)t1);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T2 t2) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>((object)t2);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T3 t3) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>((object)t3);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T4 t4) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>((object)t4);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T5 t5) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>((object)t5);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T6 t6) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>((object)t6);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T7 t7) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>((object)t7);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T8 t8) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>((object)t8);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T9 t9) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>((object)t9);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T10 t10) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>((object)t10);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T11 t11) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>((object)t11);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T12 t12) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>((object)t12);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T13 t13) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>((object)t13);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T14 t14) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>((object)t14);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T15 t15) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>((object)t15);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T16 t16) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>((object)t16);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T17 t17) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>((object)t17);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T18 t18) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>((object)t18);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T19 t19) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>((object)t19);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T20 t20) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>((object)t20);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T21 t21) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>((object)t21);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T22 t22) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>((object)t22);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T23 t23) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>((object)t23);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T24 t24) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>((object)t24);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T25 t25) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>((object)t25);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T26 t26) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>((object)t26);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T27 t27) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>((object)t27);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T28 t28) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>((object)t28);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T29 t29) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>((object)t29);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T30 t30) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>((object)t30);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T31 t31) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>((object)t31);
        public static implicit operator Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T32 t32) => new Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>((object)t32);
        public static explicit operator T1(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>self) => (T1)self.Value;
        public static explicit operator T2(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>self) => (T2)self.Value;
        public static explicit operator T3(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>self) => (T3)self.Value;
        public static explicit operator T4(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>self) => (T4)self.Value;
        public static explicit operator T5(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>self) => (T5)self.Value;
        public static explicit operator T6(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>self) => (T6)self.Value;
        public static explicit operator T7(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>self) => (T7)self.Value;
        public static explicit operator T8(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>self) => (T8)self.Value;
        public static explicit operator T9(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>self) => (T9)self.Value;
        public static explicit operator T10(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>self) => (T10)self.Value;
        public static explicit operator T11(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>self) => (T11)self.Value;
        public static explicit operator T12(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>self) => (T12)self.Value;
        public static explicit operator T13(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>self) => (T13)self.Value;
        public static explicit operator T14(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>self) => (T14)self.Value;
        public static explicit operator T15(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>self) => (T15)self.Value;
        public static explicit operator T16(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>self) => (T16)self.Value;
        public static explicit operator T17(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>self) => (T17)self.Value;
        public static explicit operator T18(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>self) => (T18)self.Value;
        public static explicit operator T19(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>self) => (T19)self.Value;
        public static explicit operator T20(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>self) => (T20)self.Value;
        public static explicit operator T21(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>self) => (T21)self.Value;
        public static explicit operator T22(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>self) => (T22)self.Value;
        public static explicit operator T23(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>self) => (T23)self.Value;
        public static explicit operator T24(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>self) => (T24)self.Value;
        public static explicit operator T25(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>self) => (T25)self.Value;
        public static explicit operator T26(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>self) => (T26)self.Value;
        public static explicit operator T27(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>self) => (T27)self.Value;
        public static explicit operator T28(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>self) => (T28)self.Value;
        public static explicit operator T29(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>self) => (T29)self.Value;
        public static explicit operator T30(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>self) => (T30)self.Value;
        public static explicit operator T31(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>self) => (T31)self.Value;
        public static explicit operator T32(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>self) => (T32)self.Value;
        public Any(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> value) => Value = value.Value;
        /// <summary>
        /// The value stored in the current Any type.
        /// </summary>
        public readonly dynamic Value;
        private Any(dynamic value) => Value = value;
        public override string ToString() => Value.ToString();
        public override bool Equals(object obj) => Value.Equals(obj);
        public override int GetHashCode() => Value.GetHashCode();
        /// <summary>
        /// The type of the value stored in the current Any type.
        /// </summary>
        public Type Type => Value.GetType();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public static readonly IEnumerable<Type> whiteList = new TypeArray<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>();
        /// <summary>
        /// TypeArray containing all of the types that are allowed.
        /// </summary>
        public IEnumerable<Type> WhiteList => whiteList;
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public static readonly ImmutableHashSet<Type> whiteSet = new HashSet<Type>(whiteList).ToImmutableHashSet();
        /// <summary>
        /// Returns a set containing all of the types that are allowed.
        /// </summary>
        public ImmutableHashSet<Type> WhiteSet => whiteSet;
        public static bool operator ==(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> right) => left.Value.Equals(right.Value);
        public static bool operator !=(Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> left, Any<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> right) => !left.Value.Equals(right.Value);
    }
}